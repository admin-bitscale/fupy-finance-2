/*
  # Inserir categorias padr√£o

  1. Categorias de Despesas
    - Alimenta√ß√£o, Transporte, Moradia, Sa√∫de, Lazer, Educa√ß√£o, Compras, Utilidades

  2. Categorias de Receitas  
    - Sal√°rio, Freelance, Investimentos, Vendas, Outros

  3. Observa√ß√µes
    - Estas categorias ser√£o criadas automaticamente para novos usu√°rios
    - Fun√ß√£o trigger para criar categorias padr√£o ao criar perfil
*/

-- Fun√ß√£o para criar categorias padr√£o para novos usu√°rios
CREATE OR REPLACE FUNCTION create_default_categories_for_user(user_id uuid)
RETURNS void AS $$
BEGIN
  -- Categorias de Despesas
  INSERT INTO categories (user_id, name, type, color, icon) VALUES
    (user_id, 'Alimenta√ß√£o', 'expense', '#f97316', 'üçΩÔ∏è'),
    (user_id, 'Transporte', 'expense', '#3b82f6', 'üöó'),
    (user_id, 'Moradia', 'expense', '#8b5cf6', 'üè†'),
    (user_id, 'Sa√∫de', 'expense', '#ef4444', 'üè•'),
    (user_id, 'Lazer', 'expense', '#06b6d4', 'üéÆ'),
    (user_id, 'Educa√ß√£o', 'expense', '#84cc16', 'üìö'),
    (user_id, 'Compras', 'expense', '#f59e0b', 'üõçÔ∏è'),
    (user_id, 'Utilidades', 'expense', '#6b7280', '‚ö°'),
    (user_id, 'Outros', 'expense', '#9ca3af', 'üì¶');

  -- Categorias de Receitas
  INSERT INTO categories (user_id, name, type, color, icon) VALUES
    (user_id, 'Sal√°rio', 'income', '#22c55e', 'üíº'),
    (user_id, 'Freelance', 'income', '#3b82f6', 'üíª'),
    (user_id, 'Investimentos', 'income', '#8b5cf6', 'üìà'),
    (user_id, 'Vendas', 'income', '#f59e0b', 'üí∞'),
    (user_id, 'Outros', 'income', '#6b7280', 'üíµ');
END;
$$ LANGUAGE plpgsql;

-- Fun√ß√£o para criar conta padr√£o para novos usu√°rios
CREATE OR REPLACE FUNCTION create_default_account_for_user(user_id uuid)
RETURNS void AS $$
BEGIN
  INSERT INTO accounts (user_id, name, type, balance, currency, bank, account_number, is_active, color) VALUES
    (user_id, 'Conta Principal', 'checking', 0, 'BRL', 'Banco', '****0000', true, '#3b82f6');
END;
$$ LANGUAGE plpgsql;

-- Fun√ß√£o para criar configura√ß√µes padr√£o para novos usu√°rios
CREATE OR REPLACE FUNCTION create_default_settings_for_user(user_id uuid)
RETURNS void AS $$
BEGIN
  INSERT INTO user_settings (user_id, currency, language, theme, notifications, auto_backup) VALUES
    (user_id, 'BRL', 'pt-BR', 'system', '{"email": true, "push": false, "whatsapp": true, "transactions": true, "goals": true, "reports": false}'::jsonb, true);
END;
$$ LANGUAGE plpgsql;

-- Fun√ß√£o para criar perfil padr√£o para novos usu√°rios
CREATE OR REPLACE FUNCTION create_default_profile_for_user(user_id uuid, email text)
RETURNS void AS $$
BEGIN
  INSERT INTO user_profiles (user_id, full_name) VALUES
    (user_id, COALESCE(split_part(email, '@', 1), 'Usu√°rio'));
END;
$$ LANGUAGE plpgsql;

-- Fun√ß√£o principal para configurar dados padr√£o do usu√°rio
CREATE OR REPLACE FUNCTION setup_new_user()
RETURNS trigger AS $$
BEGIN
  -- Criar perfil padr√£o
  PERFORM create_default_profile_for_user(NEW.id, NEW.email);
  
  -- Criar categorias padr√£o
  PERFORM create_default_categories_for_user(NEW.id);
  
  -- Criar conta padr√£o
  PERFORM create_default_account_for_user(NEW.id);
  
  -- Criar configura√ß√µes padr√£o
  PERFORM create_default_settings_for_user(NEW.id);
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Trigger para executar setup quando um novo usu√°rio √© criado
CREATE OR REPLACE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE FUNCTION setup_new_user();